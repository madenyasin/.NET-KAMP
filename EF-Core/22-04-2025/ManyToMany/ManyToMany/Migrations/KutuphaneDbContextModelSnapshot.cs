// <auto-generated />
using System;
using ManyToMany.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ManyToMany.Migrations
{
    [DbContext(typeof(KutuphaneDbContext))]
    partial class KutuphaneDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ManyToMany.Models.Kitap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ozet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Kitaplar");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ad = "Kara Kitap",
                            ISBN = "978-975-08-0197-8",
                            Ozet = ""
                        },
                        new
                        {
                            Id = 2,
                            Ad = "İnce Memed",
                            ISBN = "978-975-08-0669-0",
                            Ozet = ""
                        },
                        new
                        {
                            Id = 3,
                            Ad = "Kürk Mantolu Madonna",
                            ISBN = "978-975-08-0870-0",
                            Ozet = ""
                        });
                });

            modelBuilder.Entity("ManyToMany.Models.KitapYazar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KitapId")
                        .HasColumnType("int");

                    b.Property<int>("YazarId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KitapId");

                    b.HasIndex("YazarId");

                    b.ToTable("KitapYazar");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            KitapId = 1,
                            YazarId = 1
                        },
                        new
                        {
                            Id = 2,
                            KitapId = 2,
                            YazarId = 2
                        },
                        new
                        {
                            Id = 3,
                            KitapId = 3,
                            YazarId = 3
                        });
                });

            modelBuilder.Entity("ManyToMany.Models.Yazar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DogumTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Yazarlar");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ad = "Orhan",
                            DogumTarihi = new DateTime(1952, 6, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Soyad = "Pamuk"
                        },
                        new
                        {
                            Id = 2,
                            Ad = "Yaşar",
                            DogumTarihi = new DateTime(1923, 10, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Soyad = "Kemal"
                        },
                        new
                        {
                            Id = 3,
                            Ad = "Sabahattin",
                            DogumTarihi = new DateTime(1907, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Soyad = "Ali"
                        });
                });

            modelBuilder.Entity("ManyToMany.Models.KitapYazar", b =>
                {
                    b.HasOne("ManyToMany.Models.Kitap", "Kitap")
                        .WithMany("KitapYazar")
                        .HasForeignKey("KitapId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ManyToMany.Models.Yazar", "Yazar")
                        .WithMany("KitapYazar")
                        .HasForeignKey("YazarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kitap");

                    b.Navigation("Yazar");
                });

            modelBuilder.Entity("ManyToMany.Models.Kitap", b =>
                {
                    b.Navigation("KitapYazar");
                });

            modelBuilder.Entity("ManyToMany.Models.Yazar", b =>
                {
                    b.Navigation("KitapYazar");
                });
#pragma warning restore 612, 618
        }
    }
}
