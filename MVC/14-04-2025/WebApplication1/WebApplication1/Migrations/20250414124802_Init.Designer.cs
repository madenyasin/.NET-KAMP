// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Data;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(GaleriDbContext))]
    [Migration("20250414124802_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication1.Models.Arac", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EkleyenUyeId")
                        .HasColumnType("int");

                    b.Property<decimal>("Fiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MarkaId")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plaka")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Renk")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EkleyenUyeId");

                    b.HasIndex("MarkaId");

                    b.ToTable("Araclar");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Aciklama = "2020 model, az kullanılmış",
                            EkleyenUyeId = 1,
                            Fiyat = 250000m,
                            MarkaId = 1,
                            Model = "Corolla",
                            Plaka = "34ABC123",
                            Renk = "Beyaz"
                        },
                        new
                        {
                            Id = 2,
                            Aciklama = "2018 model, full paket",
                            EkleyenUyeId = 2,
                            Fiyat = 180000m,
                            MarkaId = 2,
                            Model = "Focus",
                            Plaka = "06XYZ456",
                            Renk = "Siyah"
                        },
                        new
                        {
                            Id = 3,
                            Aciklama = "2021 model, 20.000 km",
                            EkleyenUyeId = 3,
                            Fiyat = 450000m,
                            MarkaId = 3,
                            Model = "320i",
                            Plaka = "35DEF789",
                            Renk = "Mavi"
                        },
                        new
                        {
                            Id = 4,
                            Aciklama = "2022 model, premium paket",
                            EkleyenUyeId = 1,
                            Fiyat = 520000m,
                            MarkaId = 4,
                            Model = "C200",
                            Plaka = "16GHI012",
                            Renk = "Gri"
                        },
                        new
                        {
                            Id = 5,
                            Aciklama = "2019 model, hibrit",
                            EkleyenUyeId = 2,
                            Fiyat = 320000m,
                            MarkaId = 5,
                            Model = "Civic",
                            Plaka = "07JKL345",
                            Renk = "Kırmızı"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Marka", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar");

                    b.HasKey("Id");

                    b.ToTable("Markalar");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ad = "Toyota"
                        },
                        new
                        {
                            Id = 2,
                            Ad = "Ford"
                        },
                        new
                        {
                            Id = 3,
                            Ad = "BMW"
                        },
                        new
                        {
                            Id = 4,
                            Ad = "Mercedes"
                        },
                        new
                        {
                            Id = 5,
                            Ad = "Honda"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Uye", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KullaniciAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Uyeler");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ad = "Ahmet",
                            KullaniciAdi = "ahmet",
                            Sifre = "5e0d21b7723e1daea751aac90f6f028d",
                            Soyad = "Yılmaz"
                        },
                        new
                        {
                            Id = 2,
                            Ad = "Mehmet",
                            KullaniciAdi = "mehmet",
                            Sifre = "a394b545e6dc8a9309386a106ac6d307",
                            Soyad = "Kaya"
                        },
                        new
                        {
                            Id = 3,
                            Ad = "Ayşe",
                            KullaniciAdi = "ayse",
                            Sifre = "00de791f6f87549e6241ff25f32c64c0",
                            Soyad = "Demir"
                        },
                        new
                        {
                            Id = 4,
                            Ad = "Fatma",
                            KullaniciAdi = "fatma",
                            Sifre = "e7ce460319aee03a64d74aecf950cb6d",
                            Soyad = "Çelik"
                        },
                        new
                        {
                            Id = 5,
                            Ad = "Ali",
                            KullaniciAdi = "ali",
                            Sifre = "6695be8f704b8f2a2239330412bd857d",
                            Soyad = "Şahin"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Arac", b =>
                {
                    b.HasOne("WebApplication1.Models.Uye", "EkleyenUye")
                        .WithMany("EkledigiAraclar")
                        .HasForeignKey("EkleyenUyeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.Marka", "Marka")
                        .WithMany("Araclar")
                        .HasForeignKey("MarkaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EkleyenUye");

                    b.Navigation("Marka");
                });

            modelBuilder.Entity("WebApplication1.Models.Marka", b =>
                {
                    b.Navigation("Araclar");
                });

            modelBuilder.Entity("WebApplication1.Models.Uye", b =>
                {
                    b.Navigation("EkledigiAraclar");
                });
#pragma warning restore 612, 618
        }
    }
}
